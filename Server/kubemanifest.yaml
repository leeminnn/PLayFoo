apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: kong
    name: kong
  spec:
    ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
    - name: "8001"
      port: 8001
      targetPort: 8001
    selector:
      io.kompose.service: kong
    type: LoadBalancer
    clusterIP: 10.98.30.90
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: kong
    name: kong
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: kong
    strategy: {}
    template:
      metadata:
        name: kong
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: kong
      spec:
        containers:
        - env:
          - name: KONG_ADMIN_LISTEN
            value: 0.0.0.0:8001
          - name: KONG_DATABASE
            value: postgres
          - name: KONG_PG_HOST
            value: kong-database
          - name: KONG_PG_PASSWORD
            value: password
          - name: KONG_PG_USER
            value: kong
          - name: KONG_PROXY_LISTEN
            value: 0.0.0.0:8000
          image: kong:2.0.4
          imagePullPolicy: ""
          name: kong
          ports:
          - containerPort: 8000
          - containerPort: 8001
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: kong-database
    name: kong-database
  spec:
    ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
    selector:
      io.kompose.service: kong-database
    clusterIP: 10.98.30.91
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: kong-database
    name: kong-database
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: kong-database
    strategy:
      type: Recreate
    template:
      metadata:
        name: kong-database
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: kong-database
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            value: kong
          - name: POSTGRES_PASSWORD
            value: password
          - name: POSTGRES_USER
            value: kong
          image: postgres:9.6
          imagePullPolicy: ""
          livenessProbe:
            exec:
              command:
              - pg_isready
              - -U
              - kong
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: kong-database
          ports:
          - containerPort: 5432
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: pgdata
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      io.kompose.service: pgdata
    name: pgdata
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: konga
    name: konga
  spec:
    ports:
    - name: "1337"
      port: 1337
      targetPort: 1337
    selector:
      io.kompose.service: konga
    clusterIP: 10.98.30.92
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: konga
    name: konga
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: konga
    strategy:
      type: Recreate
    template:
      metadata:
        name: konga
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: konga
      spec:
        containers:
        - env:
          - name: DB_ADAPTER
            value: postgres
          - name: DB_DATABASE
            value: konga_db
          - name: DB_HOST
            value: kong-database
          - name: DB_PASSWORD
            value: password
          - name: DB_USER
            value: kong
          image: pantsel/konga
          imagePullPolicy: ""
          name: konga
          ports:
          - containerPort: 1337
          resources: {}
          volumeMounts:
          - mountPath: /app/kongadata
            name: kongadata
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: kongadata
          persistentVolumeClaim:
            claimName: kongadata
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      io.kompose.service: kongadata
    name: kongadata
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: rabbitmq
    name: rabbitmq
  spec:
    ports:
    - name: "5672"
      port: 5672
      targetPort: 5672
    - name: "15672"
      port: 15672
      targetPort: 15672
    selector:
      io.kompose.service: rabbitmq
    clusterIP: 10.98.30.93
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      io.kompose.network/playfoo: "true"
      io.kompose.service: kong-migration
    name: kong-migration
  spec:
    containers:
    - args:
      - kong
      - migrations
      - bootstrap
      env:
      - name: KONG_DATABASE
        value: postgres
      - name: KONG_PG_HOST
        value: kong-database
      - name: KONG_PG_PASSWORD
        value: password
      - name: KONG_PG_USER
        value: kong
      image: kong:2.0.4
      name: kong-migration
      resources: {}
    restartPolicy: OnFailure
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: rabbitmq
    name: rabbitmq
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: rabbitmq
    strategy:
      type: Recreate
    template:
      metadata:
        name: rabbitmq
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: rabbitmq
      spec:
        containers:
        - image: rabbitmq:3-management
          imagePullPolicy: ""
          name: rabbitmq
          ports:
          - containerPort: 5672
          - containerPort: 15672
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/rabbitmq
            name: rabbitmq-data
        hostname: playfoo-rabbit
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      io.kompose.service: rabbitmq-data
    name: rabbitmq-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: mysql-database
    name: mysql-database
  spec:
    ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
    selector:
      io.kompose.service: mysql-database
    clusterIP: 10.98.30.94
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: mysql-database
    name: mysql-database
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: mysql-database
    strategy:
      type: Recreate
    template:
      metadata:
        name: mysql-database
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: mysql-database
      spec:
        containers:
        - args:
          - --default-authentication-plugin=mysql_native_password
          env:
          - name: MYSQL_ROOT_PASSWORD
            value: admin
          - name: MYSQL_USER
            value: admin
          - name: MYSQL_PASSWORD
            value: admin
          image: mysql:latest
          imagePullPolicy: ""
          name: mysql-database
          ports:
          - containerPort: 3306
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/playfoo/data
            name: mysqldata
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: mysqldata
          persistentVolumeClaim:
            claimName: mysqldata
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      io.kompose.service: mysqldata
    name: mysqldata
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: phpmyadmin
    name: phpmyadmin
  spec:
    ports:
    - name: "8082"
      port: 8082
      targetPort: 80
    selector:
      io.kompose.service: phpmyadmin
    clusterIP: 10.98.30.95
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: phpmyadmin
    name: phpmyadmin
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: phpmyadmin
    strategy: {}
    template:
      metadata:
        name: phpmyadmin
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: phpmyadmin
      spec:
        containers:
        - env:
          - name: MY_SQL_USER
            value: root
          - name: MY_SQL_PASSWORD
            value: admin
          - name: PMA_HOST
            value: mysql-database
          image: phpmyadmin/phpmyadmin:latest
          imagePullPolicy: ""
          name: phpmyadmin
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: room
    name: room
  spec:
    ports:
    - name: "5001"
      port: 5001
      targetPort: 5001
    selector:
      io.kompose.service: room
    clusterIP: 10.98.32.91
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: room
    name: room
  spec:
    replicas: 2
    selector:
      matchLabels:
        io.kompose.service: room
    strategy: {}
    template:
      metadata:
        name: room
        labels:
          io.kompose.service: room
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://admin@10.98.30.94:3306/room
          ports:
          - containerPort: 5001
          image: aarontanyien/room:1.0
          imagePullPolicy: ""
          name: room
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: message-listener
    name: message-listener
  spec:
    ports:
    - name: "5003"
      port: 5003
      targetPort: 5003
    selector:
      io.kompose.service: message-listener
    clusterIP: 10.98.32.93
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: message-listener
    name: message-listener
  spec:
    replicas: 3
    selector:
      matchLabels:
        io.kompose.service: message-listener
    strategy: {}
    template:
      metadata:
        name: message-listener
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: message-listener
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://admin@10.98.30.94:3306/message
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          image: aarontanyien/message_listener:1.0
          imagePullPolicy: ""
          name: message-listener
          ports:
          - containerPort: 5003
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: activity-log
    name: activity-log
  spec:
    replicas: 2
    selector:
      matchLabels:
        io.kompose.service: activity-log
    strategy: {}
    template:
      metadata:
        name: activity-log
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: activity-log
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://admin@10.98.30.94:3306/activity_log
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          image: aarontanyien/activity_log:1.0
          imagePullPolicy: ""
          name: activity-log
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: error
    name: error
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: error
    strategy: {}
    template:
      metadata:
        name: error
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: error
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://admin@10.98.30.94:3306/error
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          image: aarontanyien/error:1.0
          imagePullPolicy: ""
          name: error
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: game
    name: game
  spec:
    ports:
    - name: "5002"
      port: 5002
      targetPort: 5002
    selector:
      io.kompose.service: game
    clusterIP: 10.98.32.92
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: game
    name: game
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: game
    strategy: {}
    template:
      metadata:
        name: game
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: game
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          image: aarontanyien/game:1.0
          imagePullPolicy: ""
          ports:
          - containerPort: 5002
          name: game
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: message
    name: message
  spec:
    replicas: 3
    selector:
      matchLabels:
        io.kompose.service: message
    strategy: {}
    template:
      metadata:
        name: message
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: message
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://admin@10.98.30.94:3306/message
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          image: aarontanyien/message:1.0
          imagePullPolicy: ""
          name: message
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: user
    name: user
  spec:
    ports:
    - name: "5000"
      port: 5000
      targetPort: 5000
    selector:
      io.kompose.service: user
    clusterIP: 10.98.32.90
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: user
    name: user
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: user
    strategy: {}
    template:
      metadata:
        name: user
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: user
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://admin@10.98.30.94:3306/user
          ports:
          - containerPort: 5000
          image: aarontanyien/user:1.0
          imagePullPolicy: ""
          name: user
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: create-room
    name: create-room
  spec:
    ports:
    - name: "5100"
      port: 5100
      targetPort: 5100
    clusterIP: 10.98.31.90
    selector:
      io.kompose.service: create-room
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: create-room
    name: create-room
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: create-room
    strategy: {}
    template:
      metadata:
        name: create-room
        labels:
          io.kompose.service: create-room
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: game_URL
            value: http://10.98.32.92:5002/game
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          - name: room_URL
            value: http://10.98.32.91:5001/room
          - name: user_URL
            value: http://10.98.32.90:5000/user
          image: aarontanyien/create_room:1.0
          imagePullPolicy: ""
          name: create-room
          ports:
          - containerPort: 5100
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: join-room
    name: join-room
  spec:
    ports:
    - name: "5101"
      port: 5101
      targetPort: 5101
    clusterIP: 10.98.31.91
    selector:
      io.kompose.service: join-room
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: join-room
    name: join-room
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: join-room
    strategy: {}
    template:
      metadata:
        name: join-room
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: join-room
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: game_URL
            value: http://10.98.32.92:5002/game
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          - name: room_URL
            value: http://10.98.32.91:5001/room
          - name: user_URL
            value: http://10.98.32.90:5000/user
          image: aarontanyien/join_room:1.0
          imagePullPolicy: ""
          name: join-room
          ports:
          - containerPort: 5101
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: leave-room
    name: leave-room
  spec:
    ports:
    - name: "5102"
      port: 5102
      targetPort: 5102
    selector:
      io.kompose.service: leave-room
    clusterIP: 10.98.31.92
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: leave-room
    name: leave-room
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: leave-room
    strategy: {}
    template:
      metadata:
        name: leave-room
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: leave-room
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          - name: room_URL
            value: http://10.98.32.91:5001/room
          - name: user_URL
            value: http://10.98.32.90:5000/user
          image: aarontanyien/leave_room:1.0
          imagePullPolicy: ""
          name: leave-room
          ports:
          - containerPort: 5102
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: send-message
    name: send-message
  spec:
    ports:
    - name: "5103"
      port: 5103
      targetPort: 5103
    selector:
      io.kompose.service: send-message
    clusterIP: 10.98.31.93
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      io.kompose.service: send-message
    name: send-message
  spec:
    replicas: 3
    selector:
      matchLabels:
        io.kompose.service: send-message
    strategy: {}
    template:
      metadata:
        name: send-message
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: send-message
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          - name: room_URL
            value: http://10.98.32.91:5001/room
          - name: user_URL
            value: http://10.98.32.90:5000/user
          image: aarontanyien/send_message:1.0
          imagePullPolicy: ""
          name: send-message
          ports:
          - containerPort: 5103
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
kind: List
metadata: {}